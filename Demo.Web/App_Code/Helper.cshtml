
@using System.Collections
@using Sail.Common
@using Sail.Web

@using Demo.Web.Models
@using Demo.Web.Apis

@helper RenderHead(string controll, string loginUrl, string userName, string companyName = null)
{
    <header class="page-header navbar">

        <div class="page-header-inner">
            <div class="page-logo">
                <a>
                    <img src="~/Content/images/q.png" alt="logo" class="logo-default" />
                </a>
            </div>
            @if (companyName.IsNotNull())
            {
            <div class="page-actions">
                <div class="top-tags">
                    <i class="fa fa-building"></i>&nbsp;&nbsp;&nbsp;<span>@companyName</span>
                </div>
            </div>
            }
            <div class="page-top">

                <div class="top-menu">
                    <ul class="nav navbar-nav pull-right">
                        <li class="dropdown">
                            <a href="" class="dropdown-toggle">
                                <i class="fa fa-qq"></i>
                                QQ客服
                            </a>

                        </li>
                        <li class="dropdown dropdown-user dropdown-light">
                            <a class="dropdown-toggle" data-toggle="dropdown" data-hover="dropdown" data-close-others="true">
                                <span class="username username-hide-on-mobile">
                                    @userName
                                </span>
                                <img class="img-circle" src="~/Content/images/avatar_default.jpg" />
                            </a>
                            <ul class="dropdown-menu dropdown-menu-default">
                                <li><a id="btnChangePwd"><i class="fa fa-key"></i> 修改密码</a></li>
                                <li><a id="btnLogout"><i class="fa fa-power-off"></i> 注销</a></li>
                            </ul>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </header>
    <script>

        $(function () {

            var $sidebar = $(".page-sidebar");
            var $content = $(".page-content");
            //function initHeight() {
            //    //if ($sidebar.height() >= $content.height()) $content.height($sidebar.height());
            //    //else $sidebar.height($content.height());
            //}

            //initHeight();

            $sidebar.on("click", ".page-sidebar-menu  li a", function () {
                var $this = $(this);
                var $li = $this.parent();
                var $submenu = $li.find(".sub-menu");
                var $arrow = $this.find(".arrow");

                $submenu.toggle();
                if ($submenu.is(":visible")) {
                    $arrow.addClass("open");
                    $li.addClass("active");
                } else {
                    $arrow.removeClass("open");
                    $li.removeClass("active");
                }
            });

            $("#btnLogout").click(function () {
                $.post($.SailConfig.ApiRoot + "@controll/logout");
                window.location.href = '@loginUrl';
            });

            $("#btnChangePwd").click(function () {
                $.CreateModal("changePwd", {
                    title: "修改密码",
                    tmplName: "ChangePassword",
                    okEvent: function (modal) {
                        if (modal.modal.CheckValidation()) {
                            $.post($.SailConfig.ApiRoot + "@controll/changepwd", { "": JSON.stringify(modal.modal.GetJson()) }, function (data) {
                                ShowMessage(data);
                                if (data.IsSuccess) {
                                    window.location.href = '@loginUrl';
                                }
                                modal.$ok.prop("disabled", false);
                            });
                        }
                    },
                    hideEvent: function (modal) { modal.modal.remove(); },
                    init: function () { $("#changePwd").modal(); }
                });
            });
        })
    </script>
}

@helper RenderTabs(Type enumType)
{
    <div class="col-md-3" id="navType">
        <ul class="nav nav-stacked">
            @{
                foreach (var item in enumType.EnumList())
                {
            <li class="nav-item">
                <a data-type="@item.Key" data-text="@item.Value" class="nav-link">@item.Value</a>
            </li>
                }
            }
        </ul>
    </div>
    <script>
        $(function () {
            $("#navType").on("click", ".nav a", function () {
                $("#navType .nav a.active").removeClass("active");
                $(this).addClass("active");
                $("#navType").trigger("after.Tab", this);
            });

            var type = $.Request("type");
            if (type) {
                $("#navType .nav-link[data-type=" + type + "]").click();
            }
            else
                $("#navType  .nav-link:eq(0)").click();
        })
    </script>
}


@* 输出主菜单 *@
@helper RenderMainMenu(IList<HMenuItem> items, string indexUrl)
{ <div class="page-sidebar" style="overflow: auto;">
        <ul class="page-sidebar-menu">
            <li class="home">
                <a href="@indexUrl">
                    <i class="fa fa-home"></i>
                    <span class="title">首页</span>
                </a>
            </li>
            @RenderMenu(items)
        </ul>
    </div>
    @* ReSharper disable ConditionIsAlwaysConst *@
    <script>
        $(function () {
            var current = '@(PageData[PageHelper.ItemId])';
            if (current) {
                var $item = $(".page-sidebar-menu a[data-itemid=" + current + "]");
                if ($item.length == 0) { window.location.href = "/nopower"; }
                $item.parents("li").addClass("active");
            }
            else $(".page-sidebar-menu .home").addClass("active");

        });
    </script>
}
@* ReSharper restore ConditionIsAlwaysConst *@
@* 递归输出菜单 *@
@helper RenderMenu(IList<HMenuItem> items)
{
foreach (var item in items)
{
        <li>
            <a data-itemid="@item.ItemId" @(item.SubItems.Count == 0 ? $"href={item.Url}" : "")>
                <i class="@item.ClassName"></i>
                <span class="title">@item.ItemName</span>

                @if (item.SubItems.Count > 0)
                {
                    <span class="arrow"></span>
                }
            </a>
            @if (item.SubItems.Count > 0)
            {
                <ul class="sub-menu">
                    @RenderMenu(item.SubItems)
                </ul>
            }
        </li>
}}


@* 输出列表 *@
@helper PageList(Func<object, HelperResult> toolbar = null, bool isHasAdd = true, string label = "列表")
{
    <div id="divList">
        <div class="portlet light">
            <div class="portlet-title">
                <div class="caption font-dark">

                    <span class="caption-subject bold uppercase">@(PageData[PageHelper.PageTitle])@label </span>
                </div>
                <div class="actions">
                    @if (isHasAdd)
                    {
                    <div class="btn-group pull-right">
                        <button class="btn   btn-primary" id="btnAdd">
                            新增<i class="fa fa-lg fa-plus"></i>
                        </button>
                    </div>
                    }
                </div>
            </div>
            <div class="portlet-body" id="pageList">
                <div class="table-toolbar" id="toolbar">
                    @if (toolbar != null)
                    {
                    @toolbar.Invoke(null)
                    }
                </div>
                <div class="table-scrollable">
                    <table class="table table-striped table-bordered table-condensed table-hover table-checkable">
                        <thead>

                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
                <div class="table-pages" id="page"></div>

            </div>

        </div>
    </div>
}

@* 输出详情 *@
@helper PageDetail(Func<object, HelperResult> result = null, Func<object, HelperResult> tabs = null, Func<object, HelperResult> expand = null, Func<object, HelperResult> PointLogShow = null)
{


    <div id="divDetail" style="display: none">
        <div class="portlet light bordered ">

            <div class="portlet-title">
                <div class="caption">
                    <a class="btn btn-sm btn-secondary margin-right-10 btnReturn">
                        <i class="fa fa-lg fa-arrow-left"></i>返回
                    </a>
                    <span class="caption-subject bold uppercase font-green"></span>
                    <span class="bold   margin-right-10 font-green">@(PageData[PageHelper.PageTitle])详情</span>
                </div>
            </div>
            <div class="portlet-body  row">
                <div class="@(expand!=null ? "col-sm-8" : "col-sm-12") mainForm">
                    <div class="tabbable tabbable-tabdrop">

                        <ul class="nav nav-pills">
                            <li class="nav-item">
                                <a class="nav-link active" data-target="basic">基本信息</a>
                            </li>
                            @if (tabs != null)
                            {
                            <li class="nav-item">
                                <a class="nav-link" data-target="pointlog">@tabs.Invoke(null)</a>
                            </li>
                            }
                        </ul>

                        <div class="tab-content baseInfo">
                            <div class="tab-pane active" id="basic">
                                <div class="portlet light">
                                    <div class="portlet-body">
                                        <div class="form-horizontal form-body">

                                        </div>
                                        <div class="form-actions">
                                            <div class="form-group">
                                                <div class="col-sm-offset-5">
                                                    <button class="btn btn-primary" id="btnSave"> 保存 </button>
                                                    <button class="btn btn-secondary btnReturn" id="btnCancel"> 取消 </button>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </div>

                            </div>

                            <div class="tab-pane otherInfo" id="pointlog">
                                @if (PointLogShow != null)
                                {
                                @PointLogShow.Invoke(null)
                                }
                            </div>
                        </div>
                    </div>
                </div>
                @if (expand != null)
                {
                <div class="col-sm-4 expandForm">
                    @expand.Invoke(null)
                </div>
                }


            </div>
            @if (result != null)
            {
            @result.Invoke(null)
            }
        </div>
    </div>
}





 